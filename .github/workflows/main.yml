name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          extensions: mbstring, xml, sqlite3

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install npm dependencies
        run: npm ci

      - name: Create database directory
        run: mkdir -p database

      - name: Create SQLite database file
        run: touch database/database.sqlite

      - name: Copy .env.example to .env
        run: cp .env.example .env

      - name: Add database path to .env
        run: echo 'DB_DATABASE=database/database.sqlite' >> .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Run migrations
        run: php artisan migrate

      - name: Run Pint with fix
        run: vendor/bin/pint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          extensions: mbstring, xml, sqlite3

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install npm dependencies
        run: npm ci

      - name: Create database directory
        run: mkdir -p database

      - name: Create SQLite database file
        run: touch database/database.sqlite

      - name: Copy .env.example to .env
        run: cp .env.example .env

      - name: Add database path to .env
        run: echo 'DB_DATABASE=database/database.sqlite' >> .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Run migrations
        run: php artisan migrate

      - name: Build assets with Vite
        run: npm run build

      - name: Run tests
        run: php artisan test

  deploy:
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.YOUR_PRIVATE_KEY }}

      - name: Run Ansible Playbook
        env:
          ANSIBLE_HOST_KEY_CHECKING: "false"
        run: |
          ansible-playbook ansible/playbook.yml -i "158.160.150.83," -u ty9991peterson
